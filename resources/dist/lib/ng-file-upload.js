window.XMLHttpRequest&&(!window.FileAPI||!FileAPI.shouldLoad)&&(window.XMLHttpRequest.prototype.setRequestHeader=function(orig){return function(header,value){if(header==="__setXHR_"){var val=value(this);val instanceof Function&&val(this)}else orig.apply(this,arguments)}}(window.XMLHttpRequest.prototype.setRequestHeader));var ngFileUpload=angular.module("ngFileUpload",[]);ngFileUpload.version="12.0.4",ngFileUpload.service("UploadBase",["$http","$q","$timeout",function($http,$q,$timeout){function sendHttp(config){function notifyProgress(e){deferred.notify&&deferred.notify(e),promise.progressFunc&&$timeout(function(){promise.progressFunc(e)})}function getNotifyEvent(n){return config._start!=null&&resumeSupported?{loaded:n.loaded+config._start,total:config._file&&config._file.size||n.total,type:n.type,config:config,lengthComputable:!0,target:n.target}:n}function uploadWithAngular(){$http(config).then(function(r){resumeSupported&&config._chunkSize&&!config._finished&&config._file?(notifyProgress({loaded:config._end,total:config._file&&config._file.size,config:config,type:"progress"}),upload.upload(config,!0)):(config._finished&&delete config._finished,deferred.resolve(r))},function(e){deferred.reject(e)},function(n){deferred.notify(n)})}config.method=config.method||"POST",config.headers=config.headers||{};var deferred=config._deferred=config._deferred||$q.defer(),promise=deferred.promise;return config.disableProgress||(config.headers.__setXHR_=function(){return function(xhr){if(!xhr||!xhr.upload||!xhr.upload.addEventListener)return;config.__XHR=xhr,config.xhrFn&&config.xhrFn(xhr),xhr.upload.addEventListener("progress",function(e){e.config=config,notifyProgress(getNotifyEvent(e))},!1),xhr.upload.addEventListener("load",function(e){e.lengthComputable&&(e.config=config,notifyProgress(getNotifyEvent(e)))},!1)}}),resumeSupported?config._chunkSize&&config._end&&!config._finished?(config._start=config._end,config._end+=config._chunkSize,uploadWithAngular()):config.resumeSizeUrl?$http.get(config.resumeSizeUrl).then(function(resp){config.resumeSizeResponseReader?config._start=config.resumeSizeResponseReader(resp.data):config._start=parseInt((resp.data.size==null?resp.data:resp.data.size).toString()),config._chunkSize&&(config._end=config._start+config._chunkSize),uploadWithAngular()},function(e){throw e}):config.resumeSize?config.resumeSize().then(function(size){config._start=size,uploadWithAngular()},function(e){throw e}):(config._chunkSize&&(config._start=0,config._end=config._start+config._chunkSize),uploadWithAngular()):uploadWithAngular(),promise.success=function(fn){return promise.then(function(response){fn(response.data,response.status,response.headers,config)}),promise},promise.error=function(fn){return promise.then(null,function(response){fn(response.data,response.status,response.headers,config)}),promise},promise.progress=function(fn){return promise.progressFunc=fn,promise.then(null,null,function(n){fn(n)}),promise},promise.abort=promise.pause=function(){return config.__XHR&&$timeout(function(){config.__XHR.abort()}),promise},promise.xhr=function(fn){return config.xhrFn=function(origXhrFn){return function(){origXhrFn&&origXhrFn.apply(promise,arguments),fn.apply(promise,arguments)}}(config.xhrFn),promise},upload.promisesCount++,promise["finally"](function(){upload.promisesCount--}),promise}function copy(obj){var clone={};for(var key in obj)obj.hasOwnProperty(key)&&(clone[key]=obj[key]);return clone}var upload=this;upload.promisesCount=0,this.isResumeSupported=function(){return window.Blob&&window.Blob.prototype.slice};var resumeSupported=this.isResumeSupported();this.isUploadInProgress=function(){return upload.promisesCount>0},this.rename=function(file,name){return file.ngfName=name,file},this.jsonBlob=function(val){val!=null&&!angular.isString(val)&&(val=JSON.stringify(val));var blob=new window.Blob([val],{type:"application/json"});return blob._ngfBlob=!0,blob},this.json=function(val){return angular.toJson(val)},this.isFile=function(file){return file!=null&&(file instanceof window.Blob||file.flashId&&file.name&&file.size)},this.upload=function(config,internal){function toResumeFile(file,formData){if(file._ngfBlob)return file;config._file=config._file||file;if(config._start!=null&&resumeSupported){config._end&&config._end>=file.size&&(config._finished=!0,config._end=file.size);var slice=file.slice(config._start,config._end||file.size);return slice.name=file.name,slice.ngfName=file.ngfName,config._chunkSize&&(formData.append("_chunkSize",config._chunkSize),formData.append("_currentChunkSize",config._end-config._start),formData.append("_chunkNumber",Math.floor(config._start/config._chunkSize)),formData.append("_totalSize",config._file.size)),slice}return file}function addFieldToFormData(formData,val,key){if(val!==undefined){angular.isDate(val)&&(val=val.toISOString());if(angular.isString(val))formData.append(key,val);else if(upload.isFile(val)){var file=toResumeFile(val,formData),split=key.split(",");split[1]&&(file.ngfName=split[1].replace(/^\s+|\s+$/g,""),key=split[0]),config._fileKey=config._fileKey||key,formData.append(key,file,file.ngfName||file.name)}else if(angular.isObject(val)){if(val.$$ngfCircularDetection)throw"ngFileUpload: Circular reference in config.data. Make sure specified data for Upload.upload() has no circular reference: "+key;val.$$ngfCircularDetection=!0;try{for(var k in val)if(val.hasOwnProperty(k)&&k!=="$$ngfCircularDetection"){var objectKey=config.objectKey==null?"[i]":config.objectKey;val.length&&parseInt(k)>-1&&(objectKey=config.arrayKey==null?objectKey:config.arrayKey),addFieldToFormData(formData,val[k],key+objectKey.replace(/[ik]/g,k))}}finally{delete val.$$ngfCircularDetection}}else formData.append(key,val)}}function digestConfig(){config._chunkSize=upload.translateScalars(config.resumeChunkSize),config._chunkSize=config._chunkSize?parseInt(config._chunkSize.toString()):null,config.headers=config.headers||{},config.headers["Content-Type"]=undefined,config.transformRequest=config.transformRequest?angular.isArray(config.transformRequest)?config.transformRequest:[config.transformRequest]:[],config.transformRequest.push(function(data){var formData=new window.FormData,key;data=data||config.fields||{},config.file&&(data.file=config.file);for(key in data)if(data.hasOwnProperty(key)){var val=data[key];config.formDataAppender?config.formDataAppender(formData,key,val):addFieldToFormData(formData,val,key)}return formData})}return internal||(config=copy(config)),config._isDigested||(config._isDigested=!0,digestConfig()),sendHttp(config)},this.http=function(config){return config=copy(config),config.transformRequest=config.transformRequest||function(data){return window.ArrayBuffer&&data instanceof window.ArrayBuffer||data instanceof window.Blob?data:$http.defaults.transformRequest[0].apply(this,arguments)},config._chunkSize=upload.translateScalars(config.resumeChunkSize),config._chunkSize=config._chunkSize?parseInt(config._chunkSize.toString()):null,sendHttp(config)},this.translateScalars=function(str){if(angular.isString(str)){if(str.search(/kb/i)===str.length-2)return parseFloat(str.substring(0,str.length-2)*1024);if(str.search(/mb/i)===str.length-2)return parseFloat(str.substring(0,str.length-2)*1048576);if(str.search(/gb/i)===str.length-2)return parseFloat(str.substring(0,str.length-2)*1073741824);if(str.search(/b/i)===str.length-1)return parseFloat(str.substring(0,str.length-1));if(str.search(/s/i)===str.length-1)return parseFloat(str.substring(0,str.length-1));if(str.search(/m/i)===str.length-1)return parseFloat(str.substring(0,str.length-1)*60);if(str.search(/h/i)===str.length-1)return parseFloat(str.substring(0,str.length-1)*3600)}return str},this.urlToBlob=function(url){var defer=$q.defer();return $http({url:url,method:"get",responseType:"arraybuffer"}).then(function(resp){var arrayBufferView=new Uint8Array(resp.data),type=resp.headers("content-type")||"image/WebP",blob=new window.Blob([arrayBufferView],{type:type});defer.resolve(blob)},function(e){defer.reject(e)}),defer.promise},this.setDefaults=function(defaults){this.defaults=defaults||{}},this.defaults={},this.version=ngFileUpload.version}]),ngFileUpload.service("Upload",["$parse","$timeout","$compile","$q","UploadExif",function($parse,$timeout,$compile,$q,UploadExif){function applyExifRotations(files,attr,scope){var promises=[upload.emptyPromise()];return angular.forEach(files,function(f,i){f.type.indexOf("image/jpeg")===0&&upload.attrGetter("ngfFixOrientation",attr,scope,{$file:f})&&promises.push(upload.happyPromise(upload.applyExifRotation(f),f).then(function(fixedFile){files.splice(i,1,fixedFile)}))}),$q.all(promises)}function resize(files,attr,scope){var resizeVal=upload.attrGetter("ngfResize",attr,scope);if(!resizeVal||!upload.isResizeSupported()||!files.length)return upload.emptyPromise();if(!(resizeVal instanceof Function))return resizeWithParams(resizeVal,files,attr,scope);var defer=$q.defer();resizeVal(files).then(function(p){resizeWithParams(p,files,attr,scope).then(function(r){defer.resolve(r)},function(e){defer.reject(e)})},function(e){defer.reject(e)})}function resizeWithParams(param,files,attr,scope){function handleFile(f,i){if(f.type.indexOf("image")===0){if(param.pattern&&!upload.validatePattern(f,param.pattern))return;var promise=upload.resize(f,param.width,param.height,param.quality,param.type,param.ratio,param.centerCrop,function(width,height){return upload.attrGetter("ngfResizeIf",attr,scope,{$width:width,$height:height,$file:f})},param.restoreExif!==!1);promises.push(promise),promise.then(function(resizedFile){files.splice(i,1,resizedFile)},function(e){f.$error="resize",f.$errorParam=(e?(e.message?e.message:e)+": ":"")+(f&&f.name)})}}var promises=[upload.emptyPromise()];for(var i=0;i<files.length;i++)handleFile(files[i],i);return $q.all(promises)}var upload=UploadExif;return upload.getAttrWithDefaults=function(attr,name){if(attr[name]!=null)return attr[name];var def=upload.defaults[name];return def==null?def:angular.isString(def)?def:JSON.stringify(def)},upload.attrGetter=function(name,attr,scope,params){var attrVal=this.getAttrWithDefaults(attr,name);if(!scope)return attrVal;try{return params?$parse(attrVal)(scope,params):$parse(attrVal)(scope)}catch(e){if(name.search(/min|max|pattern/i))return attrVal;throw e}},upload.shouldUpdateOn=function(type,attr,scope){var modelOptions=upload.attrGetter("ngModelOptions",attr,scope);return modelOptions&&modelOptions.updateOn?modelOptions.updateOn.split(" ").indexOf(type)>-1:!0},upload.emptyPromise=function(){var d=$q.defer(),args=arguments;return $timeout(function(){d.resolve.apply(d,args)}),d.promise},upload.rejectPromise=function(){var d=$q.defer(),args=arguments;return $timeout(function(){d.reject.apply(d,args)}),d.promise},upload.happyPromise=function(promise,data){var d=$q.defer();return promise.then(function(result){d.resolve(result)},function(error){$timeout(function(){throw error}),d.resolve(data)}),d.promise},upload.updateModel=function(ngModel,attr,scope,fileChange,files,evt,noDelay){function update(files,invalidFiles,newFiles,dupFiles,isSingleModel){attr.$$ngfPrevValidFiles=files,attr.$$ngfPrevInvalidFiles=invalidFiles;var file=files&&files.length?files[0]:null,invalidFile=invalidFiles&&invalidFiles.length?invalidFiles[0]:null;ngModel&&(upload.applyModelValidation(ngModel,files),ngModel.$setViewValue(isSingleModel?file:files)),fileChange&&$parse(fileChange)(scope,{$files:files,$file:file,$newFiles:newFiles,$duplicateFiles:dupFiles,$invalidFiles:invalidFiles,$invalidFile:invalidFile,$event:evt});var invalidModel=upload.attrGetter("ngfModelInvalid",attr);invalidModel&&$timeout(function(){$parse(invalidModel).assign(scope,isSingleModel?invalidFile:invalidFiles)}),$timeout(function(){})}function removeDuplicates(){function equals(f1,f2){return f1.name===f2.name&&(f1.$ngfOrigSize||f1.size)===(f2.$ngfOrigSize||f2.size)&&f1.type===f2.type}function isInPrevFiles(f){var j;for(j=0;j<prevValidFiles.length;j++)if(equals(f,prevValidFiles[j]))return!0;for(j=0;j<prevInvalidFiles.length;j++)if(equals(f,prevInvalidFiles[j]))return!0;return!1}if(files){allNewFiles=[],dupFiles=[];for(var i=0;i<files.length;i++)isInPrevFiles(files[i])?dupFiles.push(files[i]):allNewFiles.push(files[i])}}function toArray(v){return angular.isArray(v)?v:[v]}function separateInvalids(){valids=[],invalids=[],angular.forEach(allNewFiles,function(file){file.$error?invalids.push(file):valids.push(file)})}function resizeAndUpdate(){function updateModel(){$timeout(function(){update(keep?prevValidFiles.concat(valids):valids,keep?prevInvalidFiles.concat(invalids):invalids,files,dupFiles,isSingleModel)},options&&options.debounce?options.debounce.change||options.debounce:0)}resize(validateAfterResize?allNewFiles:valids,attr,scope).then(function(){validateAfterResize?upload.validate(allNewFiles,prevValidFiles.length,ngModel,attr,scope).then(function(){separateInvalids(),updateModel()}):updateModel()},function(e){throw"Could not resize files "+e})}var allNewFiles,dupFiles=[],prevValidFiles,prevInvalidFiles,invalids=[],valids=[];prevValidFiles=attr.$$ngfPrevValidFiles||[],prevInvalidFiles=attr.$$ngfPrevInvalidFiles||[],ngModel&&ngModel.$modelValue&&(prevValidFiles=toArray(ngModel.$modelValue));var keep=upload.attrGetter("ngfKeep",attr,scope);allNewFiles=(files||[]).slice(0),(keep==="distinct"||upload.attrGetter("ngfKeepDistinct",attr,scope)===!0)&&removeDuplicates(attr,scope);var isSingleModel=!keep&&!upload.attrGetter("ngfMultiple",attr,scope)&&!upload.attrGetter("multiple",attr);if(keep&&!allNewFiles.length)return;upload.attrGetter("ngfBeforeModelChange",attr,scope,{$files:files,$file:files&&files.length?files[0]:null,$newFiles:allNewFiles,$duplicateFiles:dupFiles,$event:evt});var validateAfterResize=upload.attrGetter("ngfValidateAfterResize",attr,scope),options=upload.attrGetter("ngModelOptions",attr,scope);upload.validate(allNewFiles,prevValidFiles.length,ngModel,attr,scope).then(function(){noDelay?update(allNewFiles,[],files,dupFiles,isSingleModel):((!options||!options.allowInvalid)&&!validateAfterResize?separateInvalids():valids=allNewFiles,upload.attrGetter("ngfFixOrientation",attr,scope)&&upload.isExifSupported()?applyExifRotations(valids,attr,scope).then(function(){resizeAndUpdate()}):resizeAndUpdate())})},upload}]),ngFileUpload.directive("ngfSelect",["$parse","$timeout","$compile","Upload",function($parse,$timeout,$compile,Upload){function isDelayedClickSupported(ua){var m=ua.match(/Android[^\d]*(\d+)\.(\d+)/);if(m&&m.length>2){var v=Upload.defaults.androidFixMinorVersion||4;return parseInt(m[1])<4||parseInt(m[1])===v&&parseInt(m[2])<v}return ua.indexOf("Chrome")===-1&&/.*Windows.*Safari.*/.test(ua)}function linkFileSelect(scope,elem,attr,ngModel,$parse,$timeout,$compile,upload){function isInputTypeFile(){return elem[0].tagName.toLowerCase()==="input"&&attr.type&&attr.type.toLowerCase()==="file"}function fileChangeAttr(){return attrGetter("ngfChange")||attrGetter("ngfSelect")}function changeFn(evt){if(upload.shouldUpdateOn("change",attr,scope)){var fileList=evt.__files_||evt.target&&evt.target.files,files=[];for(var i=0;i<fileList.length;i++)files.push(fileList[i]);upload.updateModel(ngModel,attr,scope,fileChangeAttr(),files.length?files:null,evt)}}function bindAttrToFileInput(fileElem){if(elem!==fileElem)for(var i=0;i<elem[0].attributes.length;i++){var attribute=elem[0].attributes[i];if(attribute.name!=="type"&&attribute.name!=="class"&&attribute.name!=="style"){if(attribute.value==null||attribute.value==="")attribute.name==="required"&&(attribute.value="required"),attribute.name==="multiple"&&(attribute.value="multiple");fileElem.attr(attribute.name,attribute.name==="id"?"ngf-"+attribute.value:attribute.value)}}}function createFileInput(){if(isInputTypeFile())return elem;var fileElem=angular.element('<input type="file">');bindAttrToFileInput(fileElem);var label=angular.element("<label>upload</label>");return label.css("visibility","hidden").css("position","absolute").css("overflow","hidden").css("width","0px").css("height","0px").css("border","none").css("margin","0px").css("padding","0px").attr("tabindex","-1"),generatedElems.push({el:elem,ref:label}),document.body.appendChild(label.append(fileElem)[0]),fileElem}function clickHandler(evt){if(elem.attr("disabled"))return!1;if(attrGetter("ngfSelectDisabled",scope))return;var r=handleTouch(evt);if(r!=null)return r;resetModel(evt);try{!isInputTypeFile()&&!document.body.contains(fileElem[0])&&(generatedElems.push({el:elem,ref:fileElem.parent()}),document.body.appendChild(fileElem.parent()[0]),fileElem.bind("change",changeFn))}catch(e){}return isDelayedClickSupported(navigator.userAgent)?setTimeout(function(){fileElem[0].click()},0):fileElem[0].click(),!1}function handleTouch(evt){var touches=evt.changedTouches||evt.originalEvent&&evt.originalEvent.changedTouches;if(evt.type==="touchstart")return initialTouchStartY=touches?touches[0].clientY:0,!0;evt.stopPropagation(),evt.preventDefault();if(evt.type==="touchend"){var currentLocation=touches?touches[0].clientY:0;if(Math.abs(currentLocation-initialTouchStartY)>20)return!1}}function resetModel(evt){upload.shouldUpdateOn("click",attr,scope)&&fileElem.val()&&(fileElem.val(null),upload.updateModel(ngModel,attr,scope,fileChangeAttr(),null,evt,!0))}function ie10SameFileSelectFix(evt){if(fileElem&&!fileElem.attr("__ngf_ie10_Fix_")){if(!fileElem[0].parentNode){fileElem=null;return}evt.preventDefault(),evt.stopPropagation(),fileElem.unbind("click");var clone=fileElem.clone();return fileElem.replaceWith(clone),fileElem=clone,fileElem.attr("__ngf_ie10_Fix_","true"),fileElem.bind("change",changeFn),fileElem.bind("click",ie10SameFileSelectFix),fileElem[0].click(),!1}fileElem.removeAttr("__ngf_ie10_Fix_")}var attrGetter=function(name,scope){return upload.attrGetter(name,attr,scope)};upload.registerModelChangeValidator(ngModel,attr,scope);var unwatches=[];unwatches.push(scope.$watch(attrGetter("ngfMultiple"),function(){fileElem.attr("multiple",attrGetter("ngfMultiple",scope))})),unwatches.push(scope.$watch(attrGetter("ngfCapture"),function(){fileElem.attr("capture",attrGetter("ngfCapture",scope))})),unwatches.push(scope.$watch(attrGetter("ngfAccept"),function(){fileElem.attr("accept",attrGetter("ngfAccept",scope))})),attr.$observe("accept",function(){fileElem.attr("accept",attrGetter("accept"))}),unwatches.push(function(){attr.$$observers&&delete attr.$$observers.accept});var initialTouchStartY=0,fileElem=elem;isInputTypeFile()||(fileElem=createFileInput()),fileElem.bind("change",changeFn),isInputTypeFile()?elem.bind("click",resetModel):elem.bind("click touchstart touchend",clickHandler),navigator.appVersion.indexOf("MSIE 10")!==-1&&fileElem.bind("click",ie10SameFileSelectFix),ngModel&&ngModel.$formatters.push(function(val){return(val==null||val.length===0)&&fileElem.val()&&fileElem.val(null),val}),scope.$on("$destroy",function(){isInputTypeFile()||fileElem.parent().remove(),angular.forEach(unwatches,function(unwatch){unwatch()})}),$timeout(function(){for(var i=0;i<generatedElems.length;i++){var g=generatedElems[i];document.body.contains(g.el[0])||(generatedElems.splice(i,1),g.ref.remove())}}),window.FileAPI&&window.FileAPI.ngfFixIE&&window.FileAPI.ngfFixIE(elem,fileElem,changeFn)}var generatedElems=[];return{restrict:"AEC",require:"?ngModel",link:function(scope,elem,attr,ngModel){linkFileSelect(scope,elem,attr,ngModel,$parse,$timeout,$compile,Upload)}}}]),function(){function getTagType(el){return el.tagName.toLowerCase()==="img"?"image":el.tagName.toLowerCase()==="audio"?"audio":el.tagName.toLowerCase()==="video"?"video":/./}function linkFileDirective(Upload,$timeout,scope,elem,attr,directiveName,resizeParams,isBackground){function constructDataUrl(file){var disallowObjectUrl=Upload.attrGetter("ngfNoObjectUrl",attr,scope);Upload.dataUrl(file,disallowObjectUrl)["finally"](function(){$timeout(function(){var src=(disallowObjectUrl?file.$ngfDataUrl:file.$ngfBlobUrl)||file.$ngfDataUrl;isBackground?elem.css("background-image","url('"+(src||"")+"')"):elem.attr("src",src),src?elem.removeClass("ng-hide"):elem.addClass("ng-hide")})})}$timeout(function(){var unwatch=scope.$watch(attr[directiveName],function(file){var size=resizeParams;if(directiveName==="ngfThumbnail"){size||(size={width:elem[0].clientWidth,height:elem[0].clientHeight});if(size.width===0&&window.getComputedStyle){var style=getComputedStyle(elem[0]);size={width:parseInt(style.width.slice(0,-2)),height:parseInt(style.height.slice(0,-2))}}}if(angular.isString(file))return elem.removeClass("ng-hide"),isBackground?elem.css("background-image","url('"+file+"')"):elem.attr("src",file);file&&file.type&&file.type.search(getTagType(elem[0]))===0&&(!isBackground||file.type.indexOf("image")===0)?size&&Upload.isResizeSupported()?Upload.resize(file,size.width,size.height,size.quality).then(function(f){constructDataUrl(f)},function(e){throw e}):constructDataUrl(file):elem.addClass("ng-hide")});scope.$on("$destroy",function(){unwatch()})})}ngFileUpload.service("UploadDataUrl",["UploadBase","$timeout","$q",function(UploadBase,$timeout,$q){var upload=UploadBase;return upload.base64DataUrl=function(file){if(angular.isArray(file)){var d=$q.defer(),count=0;return angular.forEach(file,function(f){upload.dataUrl(f,!0)["finally"](function(){count++;if(count===file.length){var urls=[];angular.forEach(file,function(ff){urls.push(ff.$ngfDataUrl)}),d.resolve(urls,file)}})}),d.promise}return upload.dataUrl(file,!0)},upload.dataUrl=function(file,disallowObjectUrl){if(!file)return upload.emptyPromise(file,file);if(disallowObjectUrl&&file.$ngfDataUrl!=null||!disallowObjectUrl&&file.$ngfBlobUrl!=null)return upload.emptyPromise(disallowObjectUrl?file.$ngfDataUrl:file.$ngfBlobUrl,file);var p=disallowObjectUrl?file.$$ngfDataUrlPromise:file.$$ngfBlobUrlPromise;if(p)return p;var deferred=$q.defer();return $timeout(function(){if(window.FileReader&&file&&(!window.FileAPI||navigator.userAgent.indexOf("MSIE 8")===-1||file.size<2e4)&&(!window.FileAPI||navigator.userAgent.indexOf("MSIE 9")===-1||file.size<4e6)){var URL=window.URL||window.webkitURL;if(URL&&URL.createObjectURL&&!disallowObjectUrl){var url;try{url=URL.createObjectURL(file)}catch(e){$timeout(function(){file.$ngfBlobUrl="",deferred.reject()});return}$timeout(function(){file.$ngfBlobUrl=url;if(url){deferred.resolve(url,file),upload.blobUrls=upload.blobUrls||[],upload.blobUrlsTotalSize=upload.blobUrlsTotalSize||0,upload.blobUrls.push({url:url,size:file.size}),upload.blobUrlsTotalSize+=file.size||0;var maxMemory=upload.defaults.blobUrlsMaxMemory||268435456,maxLength=upload.defaults.blobUrlsMaxQueueSize||200;while((upload.blobUrlsTotalSize>maxMemory||upload.blobUrls.length>maxLength)&&upload.blobUrls.length>1){var obj=upload.blobUrls.splice(0,1)[0];URL.revokeObjectURL(obj.url),upload.blobUrlsTotalSize-=obj.size}}})}else{var fileReader=new FileReader;fileReader.onload=function(e){$timeout(function(){file.$ngfDataUrl=e.target.result,deferred.resolve(e.target.result,file),$timeout(function(){delete file.$ngfDataUrl},1e3)})},fileReader.onerror=function(){$timeout(function(){file.$ngfDataUrl="",deferred.reject()})},fileReader.readAsDataURL(file)}}else $timeout(function(){file[disallowObjectUrl?"$ngfDataUrl":"$ngfBlobUrl"]="",deferred.reject()})}),disallowObjectUrl?p=file.$$ngfDataUrlPromise=deferred.promise:p=file.$$ngfBlobUrlPromise=deferred.promise,p["finally"](function(){delete file[disallowObjectUrl?"$$ngfDataUrlPromise":"$$ngfBlobUrlPromise"]}),p},upload}]),ngFileUpload.directive("ngfSrc",["Upload","$timeout",function(Upload,$timeout){return{restrict:"AE",link:function(scope,elem,attr){linkFileDirective(Upload,$timeout,scope,elem,attr,"ngfSrc",Upload.attrGetter("ngfResize",attr,scope),!1)}}}]),ngFileUpload.directive("ngfBackground",["Upload","$timeout",function(Upload,$timeout){return{restrict:"AE",link:function(scope,elem,attr){linkFileDirective(Upload,$timeout,scope,elem,attr,"ngfBackground",Upload.attrGetter("ngfResize",attr,scope),!0)}}}]),ngFileUpload.directive("ngfThumbnail",["Upload","$timeout",function(Upload,$timeout){return{restrict:"AE",link:function(scope,elem,attr){var size=Upload.attrGetter("ngfSize",attr,scope);linkFileDirective(Upload,$timeout,scope,elem,attr,"ngfThumbnail",size,Upload.attrGetter("ngfAsBackground",attr,scope))}}}]),ngFileUpload.config(["$compileProvider",function($compileProvider){$compileProvider.imgSrcSanitizationWhitelist&&$compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|local|file|data|blob):/),$compileProvider.aHrefSanitizationWhitelist&&$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|local|file|data|blob):/)}]),ngFileUpload.filter("ngfDataUrl",["UploadDataUrl","$sce",function(UploadDataUrl,$sce){return function(file,disallowObjectUrl,trustedUrl){if(angular.isString(file))return $sce.trustAsResourceUrl(file);var src=file&&((disallowObjectUrl?file.$ngfDataUrl:file.$ngfBlobUrl)||file.$ngfDataUrl);return file&&!src?(!file.$ngfDataUrlFilterInProgress&&angular.isObject(file)&&(file.$ngfDataUrlFilterInProgress=!0,UploadDataUrl.dataUrl(file,disallowObjectUrl)),""):(file&&delete file.$ngfDataUrlFilterInProgress,(file&&src?trustedUrl?$sce.trustAsResourceUrl(src):src:file)||"")}}])}(),ngFileUpload.service("UploadValidate",["UploadDataUrl","$q","$timeout",function(UploadDataUrl,$q,$timeout){function globStringToRegex(str){var regexp="",excludes=[];if(str.length>2&&str[0]==="/"&&str[str.length-1]==="/")regexp=str.substring(1,str.length-1);else{var split=str.split(",");if(split.length>1)for(var i=0;i<split.length;i++){var r=globStringToRegex(split[i]);r.regexp?(regexp+="("+r.regexp+")",i<split.length-1&&(regexp+="|")):excludes=excludes.concat(r.excludes)}else str.indexOf("!")===0?excludes.push("^((?!"+globStringToRegex(str.substring(1)).regexp+").)*$"):(str.indexOf(".")===0&&(str="*"+str),regexp="^"+str.replace(new RegExp("[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]","g"),"\\$&")+"$",regexp=regexp.replace(/\\\*/g,".*").replace(/\\\?/g,"."))}return{regexp:regexp,excludes:excludes}}function markModelAsDirty(ngModel,files){files!=null&&!ngModel.$dirty&&(ngModel.$setDirty?ngModel.$setDirty():ngModel.$dirty=!0)}var upload=UploadDataUrl;return upload.validatePattern=function(file,val){if(!val)return!0;var pattern=globStringToRegex(val),valid=!0;if(pattern.regexp&&pattern.regexp.length){var regexp=new RegExp(pattern.regexp,"i");valid=file.type!=null&&regexp.test(file.type)||file.name!=null&&regexp.test(file.name)}var len=pattern.excludes.length;while(len--){var exclude=new RegExp(pattern.excludes[len],"i");valid=valid&&(file.type==null||exclude.test(file.type))&&(file.name==null||exclude.test(file.name))}return valid},upload.ratioToFloat=function(val){var r=val.toString(),xIndex=r.search(/[x:]/i);return xIndex>-1?r=parseFloat(r.substring(0,xIndex))/parseFloat(r.substring(xIndex+1)):r=parseFloat(r),r},upload.registerModelChangeValidator=function(ngModel,attr,scope){ngModel&&ngModel.$formatters.push(function(files){ngModel.$dirty&&(files&&!angular.isArray(files)&&(files=[files]),upload.validate(files,0,ngModel,attr,scope).then(function(){upload.applyModelValidation(ngModel,files)}))})},upload.applyModelValidation=function(ngModel,files){markModelAsDirty(ngModel,files),angular.forEach(ngModel.$ngfValidations,function(validation){ngModel.$setValidity(validation.name,validation.valid)})},upload.getValidationAttr=function(attr,scope,name,validationName,file){var dName="ngf"+name[0].toUpperCase()+name.substr(1),val=upload.attrGetter(dName,attr,scope,{$file:file});if(val==null){val=upload.attrGetter("ngfValidate",attr,scope,{$file:file});if(val){var split=(validationName||name).split(".");val=val[split[0]],split.length>1&&(val=val&&val[split[1]])}}return val},upload.validate=function(files,prevLength,ngModel,attr,scope){function validateSync(name,validationName,fn){if(files){var i=files.length,valid=null;while(i--){var file=files[i];if(file){var val=upload.getValidationAttr(attr,scope,name,validationName,file);val!=null&&(fn(file,val,i)||(file.$error=name,(file.$errorMessages=file.$errorMessages||{})[name]=!0,file.$errorParam=val,files.splice(i,1),valid=!1))}}valid!==null&&ngModel.$ngfValidations.push({name:name,valid:valid})}}function validateAsync(name,validationName,type,asyncFn,fn){function resolveResult(defer,file,val){val!=null?asyncFn(file,val).then(function(d){fn(d,val)?defer.resolve():(file.$error=name,(file.$errorMessages=file.$errorMessages||{})[name]=!0,file.$errorParam=val,defer.reject())},function(){attrGetter("ngfValidateForce",{$file:file})?(file.$error=name,(file.$errorMessages=file.$errorMessages||{})[name]=!0,file.$errorParam=val,defer.reject()):defer.resolve()}):defer.resolve()}var promises=[upload.emptyPromise()];if(files)return files=files.length===undefined?[files]:files,angular.forEach(files,function(file){var defer=$q.defer();promises.push(defer.promise);if(!(!type||file.type!=null&&file.type.search(type)===0)){defer.resolve();return}name==="dimensions"&&upload.attrGetter("ngfDimensions",attr)!=null?upload.imageDimensions(file).then(function(d){resolveResult(defer,file,attrGetter("ngfDimensions",{$file:file,$width:d.width,$height:d.height}))},function(){defer.reject()}):name==="duration"&&upload.attrGetter("ngfDuration",attr)!=null?upload.mediaDuration(file).then(function(d){resolveResult(defer,file,attrGetter("ngfDuration",{$file:file,$duration:d}))},function(){defer.reject()}):resolveResult(defer,file,upload.getValidationAttr(attr,scope,name,validationName,file))}),$q.all(promises).then(function(){ngModel.$ngfValidations.push({name:name,valid:!0})},function(){ngModel.$ngfValidations.push({name:name,valid:!1})})}ngModel=ngModel||{},ngModel.$ngfValidations=ngModel.$ngfValidations||[],angular.forEach(ngModel.$ngfValidations,function(v){v.valid=!0});var attrGetter=function(name,params){return upload.attrGetter(name,attr,scope,params)};if(files==null||files.length===0)return upload.emptyPromise(ngModel);files=files.length===undefined?[files]:files.slice(0),validateSync("maxFiles",null,function(file,val,i){return prevLength+i<val}),validateSync("pattern",null,upload.validatePattern),validateSync("minSize","size.min",function(file,val){return file.size+.1>=upload.translateScalars(val)}),validateSync("maxSize","size.max",function(file,val){return file.size-.1<=upload.translateScalars(val)});var totalSize=0;validateSync("maxTotalSize",null,function(file,val){return totalSize+=file.size,totalSize>upload.translateScalars(val)?(files.splice(0,files.length),!1):!0}),validateSync("validateFn",null,function(file,r){return r===!0||r===null||r===""});if(!files.length)return upload.emptyPromise(ngModel,ngModel.$ngfValidations);var deffer=$q.defer(),promises=[];return promises.push(upload.happyPromise(validateAsync("maxHeight","height.max",/image/,this.imageDimensions,function(d,val){return d.height<=val}))),promises.push(upload.happyPromise(validateAsync("minHeight","height.min",/image/,this.imageDimensions,function(d,val){return d.height>=val}))),promises.push(upload.happyPromise(validateAsync("maxWidth","width.max",/image/,this.imageDimensions,function(d,val){return d.width<=val}))),promises.push(upload.happyPromise(validateAsync("minWidth","width.min",/image/,this.imageDimensions,function(d,val){return d.width>=val}))),promises.push(upload.happyPromise(validateAsync("dimensions",null,/image/,function(file,val){return upload.emptyPromise(val)},function(r){return r}))),promises.push(upload.happyPromise(validateAsync("ratio",null,/image/,this.imageDimensions,function(d,val){var split=val.toString().split(","),valid=!1;for(var i=0;i<split.length;i++)Math.abs(d.width/d.height-upload.ratioToFloat(split[i]))<1e-4&&(valid=!0);return valid}))),promises.push(upload.happyPromise(validateAsync("maxRatio","ratio.max",/image/,this.imageDimensions,function(d,val){return d.width/d.height-upload.ratioToFloat(val)<1e-4}))),promises.push(upload.happyPromise(validateAsync("minRatio","ratio.min",/image/,this.imageDimensions,function(d,val){return d.width/d.height-upload.ratioToFloat(val)>-0.0001}))),promises.push(upload.happyPromise(validateAsync("maxDuration","duration.max",/audio|video/,this.mediaDuration,function(d,val){return d<=upload.translateScalars(val)}))),promises.push(upload.happyPromise(validateAsync("minDuration","duration.min",/audio|video/,this.mediaDuration,function(d,val){return d>=upload.translateScalars(val)}))),promises.push(upload.happyPromise(validateAsync("duration",null,/audio|video/,function(file,val){return upload.emptyPromise(val)},function(r){return r}))),promises.push(upload.happyPromise(validateAsync("validateAsyncFn",null,null,function(file,val){return val},function(r){return r===!0||r===null||r===""}))),$q.all(promises).then(function(){deffer.resolve(ngModel,ngModel.$ngfValidations)})},upload.imageDimensions=function(file){if(file.$ngfWidth&&file.$ngfHeight){var d=$q.defer();return $timeout(function(){d.resolve({width:file.$ngfWidth,height:file.$ngfHeight})}),d.promise}if(file.$ngfDimensionPromise)return file.$ngfDimensionPromise;var deferred=$q.defer();return $timeout(function(){if(file.type.indexOf("image")!==0){deferred.reject("not image");return}upload.dataUrl(file).then(function(dataUrl){function success(){var width=img[0].clientWidth,height=img[0].clientHeight;img.remove(),file.$ngfWidth=width,file.$ngfHeight=height,deferred.resolve({width:width,height:height})}function error(){img.remove(),deferred.reject("load error")}function checkLoadError(){$timeout(function(){img[0].parentNode&&(img[0].clientWidth?success():count>10?error():checkLoadError())},1e3)}var img=angular.element("<img>").attr("src",dataUrl).css("visibility","hidden").css("position","fixed").css("max-width","none !important").css("max-height","none !important");img.on("load",success),img.on("error",error);var count=0;checkLoadError(),angular.element(document.getElementsByTagName("body")[0]).append(img)},function(){deferred.reject("load error")})}),file.$ngfDimensionPromise=deferred.promise,file.$ngfDimensionPromise["finally"](function(){delete file.$ngfDimensionPromise}),file.$ngfDimensionPromise},upload.mediaDuration=function(file){if(file.$ngfDuration){var d=$q.defer();return $timeout(function(){d.resolve(file.$ngfDuration)}),d.promise}if(file.$ngfDurationPromise)return file.$ngfDurationPromise;var deferred=$q.defer();return $timeout(function(){if(file.type.indexOf("audio")!==0&&file.type.indexOf("video")!==0){deferred.reject("not media");return}upload.dataUrl(file).then(function(dataUrl){function success(){var duration=el[0].duration;file.$ngfDuration=duration,el.remove(),deferred.resolve(duration)}function error(){el.remove(),deferred.reject("load error")}function checkLoadError(){$timeout(function(){el[0].parentNode&&(el[0].duration?success():count>10?error():checkLoadError())},1e3)}var el=angular.element(file.type.indexOf("audio")===0?"<audio>":"<video>").attr("src",dataUrl).css("visibility","none").css("position","fixed");el.on("loadedmetadata",success),el.on("error",error);var count=0;checkLoadError(),angular.element(document.body).append(el)},function(){deferred.reject("load error")})}),file.$ngfDurationPromise=deferred.promise,file.$ngfDurationPromise["finally"](function(){delete file.$ngfDurationPromise}),file.$ngfDurationPromise},upload}]),ngFileUpload.service("UploadResize",["UploadValidate","$q",function(UploadValidate,$q){var upload=UploadValidate,calculateAspectRatioFit=function(srcWidth,srcHeight,maxWidth,maxHeight,centerCrop){var ratio=centerCrop?Math.max(maxWidth/srcWidth,maxHeight/srcHeight):Math.min(maxWidth/srcWidth,maxHeight/srcHeight);return{width:srcWidth*ratio,height:srcHeight*ratio,marginX:srcWidth*ratio-maxWidth,marginY:srcHeight*ratio-maxHeight}},resize=function(imagen,width,height,quality,type,ratio,centerCrop,resizeIf){var deferred=$q.defer(),canvasElement=document.createElement("canvas"),imageElement=document.createElement("img");return imageElement.onload=function(){if(resizeIf!=null&&resizeIf(imageElement.width,imageElement.height)===!1){deferred.reject("resizeIf");return}try{if(ratio){var ratioFloat=upload.ratioToFloat(ratio),imgRatio=imageElement.width/imageElement.height;imgRatio<ratioFloat?(width=imageElement.width,height=width/ratioFloat):(height=imageElement.height,width=height*ratioFloat)}width||(width=imageElement.width),height||(height=imageElement.height);var dimensions=calculateAspectRatioFit(imageElement.width,imageElement.height,width,height,centerCrop);canvasElement.width=Math.min(dimensions.width,width),canvasElement.height=Math.min(dimensions.height,height);var context=canvasElement.getContext("2d");context.drawImage(imageElement,Math.min(0,-dimensions.marginX/2),Math.min(0,-dimensions.marginY/2),dimensions.width,dimensions.height),deferred.resolve(canvasElement.toDataURL(type||"image/WebP",quality||.934))}catch(e){deferred.reject(e)}},imageElement.onerror=function(){deferred.reject()},imageElement.src=imagen,deferred.promise};return upload.dataUrltoBlob=function(dataurl,name,origSize){var arr=dataurl.split(","),mime=arr[0].match(/:(.*?);/)[1],bstr=atob(arr[1]),n=bstr.length,u8arr=new Uint8Array(n);while(n--)u8arr[n]=bstr.charCodeAt(n);var blob=new window.Blob([u8arr],{type:mime});return blob.name=name,blob.$ngfOrigSize=origSize,blob},upload.isResizeSupported=function(){var elem=document.createElement("canvas");return window.atob&&elem.getContext&&elem.getContext("2d")&&window.Blob},upload.isResizeSupported()&&Object.defineProperty(window.Blob.prototype,"name",{get:function(){return this.$ngfName},set:function(v){this.$ngfName=v},configurable:!0}),upload.resize=function(file,width,height,quality,type,ratio,centerCrop,resizeIf,restoreExif){if(file.type.indexOf("image")!==0)return upload.emptyPromise(file);var deferred=$q.defer();return upload.dataUrl(file,!0).then(function(url){resize(url,width,height,quality,type||file.type,ratio,centerCrop,resizeIf).then(function(dataUrl){if(file.type==="image/jpeg"&&restoreExif)try{dataUrl=upload.restoreExif(url,dataUrl)}catch(e){setTimeout(function(){throw e},1)}try{var blob=upload.dataUrltoBlob(dataUrl,file.name,file.size);deferred.resolve(blob)}catch(e){deferred.reject(e)}},function(r){r==="resizeIf"&&deferred.resolve(file),deferred.reject(r)})},function(e){deferred.reject(e)}),deferred.promise},upload}]),function(){function linkDrop(scope,elem,attr,ngModel,$parse,$timeout,$location,upload,$http,$q){function isDisabled(){return elem.attr("disabled")||attrGetter("ngfDropDisabled",scope)}function updateModel(files,evt){upload.updateModel(ngModel,attr,scope,attrGetter("ngfChange")||attrGetter("ngfDrop"),files,evt)}function extractFilesFromHtml(updateOn,html){if(!upload.shouldUpdateOn(updateOn,attr,scope)||!html)return upload.rejectPromise([]);var urls=[];html.replace(/<(img src|img [^>]* src) *=\"([^\"]*)\"/gi,function(m,n,src){urls.push(src)});var promises=[],files=[];if(urls.length){angular.forEach(urls,function(url){promises.push(upload.urlToBlob(url).then(function(blob){files.push(blob)}))});var defer=$q.defer();return $q.all(promises).then(function(){defer.resolve(files)},function(e){defer.reject(e)}),defer.promise}return upload.emptyPromise()}function calculateDragOverClass(scope,attr,evt,callback){var obj=attrGetter("ngfDragOverClass",scope,{$event:evt}),dClass="dragover";if(angular.isString(obj))dClass=obj;else if(obj){obj.delay&&(dragOverDelay=obj.delay);if(obj.accept||obj.reject){var items=evt.dataTransfer.items;if(items==null||!items.length)dClass=obj.accept;else{var pattern=obj.pattern||attrGetter("ngfPattern",scope,{$event:evt}),len=items.length;while(len--){if(!upload.validatePattern(items[len],pattern)){dClass=obj.reject;break}dClass=obj.accept}}}}callback(dClass)}function extractFiles(items,fileList,allowDir,multiple){function traverseFileTree(entry,path){var defer=$q.defer();if(entry!=null)if(entry.isDirectory){var promises=[upload.emptyPromise()];if(includeDir){var file={type:"directory"};file.name=file.path=(path||"")+entry.name+entry.name,files.push(file)}var dirReader=entry.createReader(),entries=[],readEntries=function(){dirReader.readEntries(function(results){try{results.length?(entries=entries.concat(Array.prototype.slice.call(results||[],0)),readEntries()):(angular.forEach(entries.slice(0),function(e){files.length<=maxFiles&&totalSize<=maxTotalSize&&promises.push(traverseFileTree(e,(path?path:"")+entry.name+"/"))}),$q.all(promises).then(function(){defer.resolve()},function(e){defer.reject(e)}))}catch(e){defer.reject(e)}},function(e){defer.reject(e)})};readEntries()}else entry.file(function(file){try{file.path=(path?path:"")+file.name,includeDir&&(file=upload.rename(file,file.path)),files.push(file),totalSize+=file.size,defer.resolve()}catch(e){defer.reject(e)}},function(e){defer.reject(e)});return defer.promise}var maxFiles=upload.getValidationAttr(attr,scope,"maxFiles")||Number.MAX_VALUE,maxTotalSize=upload.getValidationAttr(attr,scope,"maxTotalSize")||Number.MAX_VALUE,includeDir=attrGetter("ngfIncludeDir",scope),files=[],totalSize=0,promises=[upload.emptyPromise()];if(items&&items.length>0&&$location.protocol()!=="file")for(var i=0;i<items.length;i++){if(items[i].webkitGetAsEntry&&items[i].webkitGetAsEntry()&&items[i].webkitGetAsEntry().isDirectory){var entry=items[i].webkitGetAsEntry();if(entry.isDirectory&&!allowDir)continue;entry!=null&&promises.push(traverseFileTree(entry))}else{var f=items[i].getAsFile();f!=null&&(files.push(f),totalSize+=f.size)}if(files.length>maxFiles||totalSize>maxTotalSize||!multiple&&files.length>0)break}else if(fileList!=null)for(var j=0;j<fileList.length;j++){var file=fileList.item(j);if(file.type||file.size>0)files.push(file),totalSize+=file.size;if(files.length>maxFiles||totalSize>maxTotalSize||!multiple&&files.length>0)break}var defer=$q.defer();return $q.all(promises).then(function(){if(!multiple&&!includeDir&&files.length){var i=0;while(files[i]&&files[i].type==="directory")i++;defer.resolve([files[i]])}else defer.resolve(files)},function(e){defer.reject(e)}),defer.promise}var available=dropAvailable(),attrGetter=function(name,scope,params){return upload.attrGetter(name,attr,scope,params)};attrGetter("dropAvailable")&&$timeout(function(){scope[attrGetter("dropAvailable")]?scope[attrGetter("dropAvailable")].value=available:scope[attrGetter("dropAvailable")]=available});if(!available){attrGetter("ngfHideOnDropNotAvailable",scope)===!0&&elem.css("display","none");return}attrGetter("ngfSelect")==null&&upload.registerModelChangeValidator(ngModel,attr,scope);var leaveTimeout=null,stopPropagation=$parse(attrGetter("ngfStopPropagation")),dragOverDelay=1,actualDragOverClass;elem[0].addEventListener("dragover",function(evt){if(isDisabled()||!upload.shouldUpdateOn("drop",attr,scope))return;evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation();if(navigator.userAgent.indexOf("Chrome")>-1){var b=evt.dataTransfer.effectAllowed;evt.dataTransfer.dropEffect="move"===b||"linkMove"===b?"move":"copy"}$timeout.cancel(leaveTimeout),actualDragOverClass||(actualDragOverClass="C",calculateDragOverClass(scope,attr,evt,function(clazz){actualDragOverClass=clazz,elem.addClass(actualDragOverClass),attrGetter("ngfDrag",scope,{$isDragging:!0,$class:actualDragOverClass,$event:evt})}))},!1),elem[0].addEventListener("dragenter",function(evt){if(isDisabled()||!upload.shouldUpdateOn("drop",attr,scope))return;evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation()},!1),elem[0].addEventListener("dragleave",function(evt){if(isDisabled()||!upload.shouldUpdateOn("drop",attr,scope))return;evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation(),leaveTimeout=$timeout(function(){actualDragOverClass&&elem.removeClass(actualDragOverClass),actualDragOverClass=null,attrGetter("ngfDrag",scope,{$isDragging:!1,$event:evt})},dragOverDelay||100)},!1),elem[0].addEventListener("drop",function(evt){if(isDisabled()||!upload.shouldUpdateOn("drop",attr,scope))return;evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation(),actualDragOverClass&&elem.removeClass(actualDragOverClass),actualDragOverClass=null;var items=evt.dataTransfer.items,html;try{html=evt.dataTransfer&&evt.dataTransfer.getData&&evt.dataTransfer.getData("text/html")}catch(e){}extractFiles(items,evt.dataTransfer.files,attrGetter("ngfAllowDir",scope)!==!1,attrGetter("multiple")||attrGetter("ngfMultiple",scope)).then(function(files){files.length?updateModel(files,evt):extractFilesFromHtml("dropUrl",html).then(function(files){updateModel(files,evt)})})},!1),elem[0].addEventListener("paste",function(evt){navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&attrGetter("ngfEnableFirefoxPaste",scope)&&evt.preventDefault();if(isDisabled()||!upload.shouldUpdateOn("paste",attr,scope))return;var files=[],clipboard=evt.clipboardData||evt.originalEvent.clipboardData;if(clipboard&&clipboard.items)for(var k=0;k<clipboard.items.length;k++)clipboard.items[k].type.indexOf("image")!==-1&&files.push(clipboard.items[k].getAsFile());files.length?updateModel(files,evt):extractFilesFromHtml("pasteUrl",clipboard).then(function(files){updateModel(files,evt)})},!1),navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&attrGetter("ngfEnableFirefoxPaste",scope)&&(elem.attr("contenteditable",!0),elem.on("keypress",function(e){!e.metaKey&&!e.ctrlKey&&e.preventDefault()}))}function dropAvailable(){var div=document.createElement("div");return"draggable"in div&&"ondrop"in div&&!/Edge\/12./i.test(navigator.userAgent)}ngFileUpload.directive("ngfDrop",["$parse","$timeout","$location","Upload","$http","$q",function($parse,$timeout,$location,Upload,$http,$q){return{restrict:"AEC",require:"?ngModel",link:function(scope,elem,attr,ngModel){linkDrop(scope,elem,attr,ngModel,$parse,$timeout,$location,Upload,$http,$q)}}}]),ngFileUpload.directive("ngfNoFileDrop",function(){return function(scope,elem){dropAvailable()&&elem.css("display","none")}}),ngFileUpload.directive("ngfDropAvailable",["$parse","$timeout","Upload",function($parse,$timeout,Upload){return function(scope,elem,attr){if(dropAvailable()){var model=$parse(Upload.attrGetter("ngfDropAvailable",attr));$timeout(function(){model(scope),model.assign&&model.assign(scope,!0)})}}}])}(),ngFileUpload.service("UploadExif",["UploadResize","$q",function(UploadResize,$q){function applyTransform(ctx,orientation,width,height){switch(orientation){case 2:return ctx.transform(-1,0,0,1,width,0);case 3:return ctx.transform(-1,0,0,-1,width,height);case 4:return ctx.transform(1,0,0,-1,0,height);case 5:return ctx.transform(0,1,1,0,0,0);case 6:return ctx.transform(0,1,-1,0,height,0);case 7:return ctx.transform(0,-1,-1,0,height,width);case 8:return ctx.transform(0,-1,1,0,0,width)}}function arrayBufferToBase64(buffer){var binary="",bytes=new Uint8Array(buffer),len=bytes.byteLength;for(var i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}var upload=UploadResize;return upload.isExifSupported=function(){return window.FileReader&&(new FileReader).readAsArrayBuffer&&upload.isResizeSupported()},upload.readOrientation=function(file){var defer=$q.defer(),reader=new FileReader,slicedFile=file.slice?file.slice(0,65536):file;return reader.readAsArrayBuffer(slicedFile),reader.onerror=function(e){return defer.reject(e)},reader.onload=function(e){var result={orientation:1},view=new DataView(this.result);if(view.getUint16(0,!1)!==65496)return defer.resolve(result);var length=view.byteLength,offset=2;while(offset<length){var marker=view.getUint16(offset,!1);offset+=2;if(marker===65505){if(view.getUint32(offset+=2,!1)!==1165519206)return defer.resolve(result);var little=view.getUint16(offset+=6,!1)===18761;offset+=view.getUint32(offset+4,little);var tags=view.getUint16(offset,little);offset+=2;for(var i=0;i<tags;i++)if(view.getUint16(offset+i*12,little)===274){var orientation=view.getUint16(offset+i*12+8,little);return orientation>=2&&orientation<=8&&(view.setUint16(offset+i*12+8,1,little),result.fixedArrayBuffer=e.target.result),result.orientation=orientation,defer.resolve(result)}}else{if((marker&65280)!==65280)break;offset+=view.getUint16(offset,!1)}}return defer.resolve(result)},defer.promise},upload.applyExifRotation=function(file){if(file.type.indexOf("image/jpeg")!==0)return upload.emptyPromise(file);var deferred=$q.defer();return upload.readOrientation(file).then(function(result){if(result.orientation<2||result.orientation>8)return deferred.resolve(file);upload.dataUrl(file,!0).then(function(url){var canvas=document.createElement("canvas"),img=document.createElement("img");img.onload=function(){try{canvas.width=result.orientation>4?img.height:img.width,canvas.height=result.orientation>4?img.width:img.height;var ctx=canvas.getContext("2d");applyTransform(ctx,result.orientation,img.width,img.height),ctx.drawImage(img,0,0);var dataUrl=canvas.toDataURL(file.type||"image/WebP",.934);dataUrl=upload.restoreExif(arrayBufferToBase64(result.fixedArrayBuffer),dataUrl);var blob=upload.dataUrltoBlob(dataUrl,file.name);deferred.resolve(blob)}catch(e){return deferred.reject(e)}},img.onerror=function(){deferred.reject()},img.src=url},function(e){deferred.reject(e)})},function(e){deferred.reject(e)}),deferred.promise},upload.restoreExif=function(orig,resized){var ExifRestorer={};return ExifRestorer.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",ExifRestorer.encode64=function(input){var output="",chr1,chr2,chr3="",enc1,enc2,enc3,enc4="",i=0;do chr1=input[i++],chr2=input[i++],chr3=input[i++],enc1=chr1>>2,enc2=(chr1&3)<<4|chr2>>4,enc3=(chr2&15)<<2|chr3>>6,enc4=chr3&63,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+this.KEY_STR.charAt(enc1)+this.KEY_STR.charAt(enc2)+this.KEY_STR.charAt(enc3)+this.KEY_STR.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output},ExifRestorer.restore=function(origFileBase64,resizedFileBase64){origFileBase64.match("data:image/jpeg;base64,")&&(origFileBase64=origFileBase64.replace("data:image/jpeg;base64,",""));var rawImage=this.decode64(origFileBase64),segments=this.slice2Segments(rawImage),image=this.exifManipulation(resizedFileBase64,segments);return"data:image/jpeg;base64,"+this.encode64(image)},ExifRestorer.exifManipulation=function(resizedFileBase64,segments){var exifArray=this.getExifArray(segments),newImageArray=this.insertExif(resizedFileBase64,exifArray);return new Uint8Array(newImageArray)},ExifRestorer.getExifArray=function(segments){var seg;for(var x=0;x<segments.length;x++){seg=segments[x];if(seg[0]===255&seg[1]===225)return seg}return[]},ExifRestorer.insertExif=function(resizedFileBase64,exifArray){var imageData=resizedFileBase64.replace("data:image/jpeg;base64,",""),buf=this.decode64(imageData),separatePoint=buf.indexOf(255,3),mae=buf.slice(0,separatePoint),ato=buf.slice(separatePoint),array=mae;return array=array.concat(exifArray),array=array.concat(ato),array},ExifRestorer.slice2Segments=function(rawImageArray){var head=0,segments=[];for(;;){if(rawImageArray[head]===255&rawImageArray[head+1]===218)break;if(rawImageArray[head]===255&rawImageArray[head+1]===216)head+=2;else{var length=rawImageArray[head+2]*256+rawImageArray[head+3],endPoint=head+length+2,seg=rawImageArray.slice(head,endPoint);segments.push(seg),head=endPoint}if(head>rawImageArray.length)break}return segments},ExifRestorer.decode64=function(input){var chr1,chr2,chr3="",enc1,enc2,enc3,enc4="",i=0,buf=[],base64test=/[^A-Za-z0-9\+\/\=]/g;base64test.exec(input)&&console.log("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, NaNExpect errors in decoding."),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do enc1=this.KEY_STR.indexOf(input.charAt(i++)),enc2=this.KEY_STR.indexOf(input.charAt(i++)),enc3=this.KEY_STR.indexOf(input.charAt(i++)),enc4=this.KEY_STR.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(enc2&15)<<4|enc3>>2,chr3=(enc3&3)<<6|enc4,buf.push(chr1),enc3!==64&&buf.push(chr2),enc4!==64&&buf.push(chr3),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return buf},ExifRestorer.restore(orig,resized)},upload}]);