define(["require","ngAMD","angular","shopSelector","memberequity/cardtype/savingSelector","text!memberequity/cardtype/savingSelector.html","memberequity/cardtype/scoreSelector","text!memberequity/cardtype/scoreSelector.html","memberequity/cardtype/exchangeSelector","text!memberequity/cardtype/exchangeSelector.html"],function(require){var ngAMD=require("ngAMD"),angular=require("angular"),shopselector=require("shopSelector"),savingSelectorCtrl=require("memberequity/cardtype/savingSelector"),savingSelectorTemp=require("text!memberequity/cardtype/savingSelector.html"),scoreSelectorCtrl=require("memberequity/cardtype/scoreSelector"),scoreSelectorTemp=require("text!memberequity/cardtype/scoreSelector.html"),exchangeSelectorCtrl=require("memberequity/cardtype/exchangeSelector"),exchangeSelectorTemp=require("text!memberequity/cardtype/exchangeSelector.html");ngAMD.controller("cardTypeEdit",["$scope","$rootScope","ajaxService","register","shopSelectorService","$uibModal","modalService",function($scope,$rootScope,ajaxService,register,shopSelectorService,$uibModal,modalService){function getDays(month){var days=[],date=new Date((new Date).getFullYear(),month,0),daysCount=date.getDate();for(var i=1;i<=daysCount;i++)days.push(i<10?"0"+i:i+"");return days}function getMonth(date){return date.substring(0,date.indexOf("-"))}function getDay(date){return date.substring(date.indexOf("-")+1,date.length)}function inArray(arr,item){for(var i=0;i<arr.length;i++)if(arr[i].id==item.id)return i;return-1}function getCurrentTabId(){var tabs=$rootScope.tabs;for(var i=0;i<tabs.length;i++)if(tabs[i].ng_show===!0)return tabs[i].id;return $scope.from}function convertModalShop(shops){var newShops=[];for(var i=0;i<shops.length;i++){var shop={};shop.code=shops[i].code,shop.showName=shops[i].showName,shop.bindFlg=shops[i].bindFlg,newShops.push(shop)}return newShops}function isChange(obj,newObj){var objStr=JSON.stringify(obj),newObjStr=JSON.stringify(newObj),objHashCode=hashCode(objStr),newObjHashCode=hashCode(newObjStr);return objHashCode===newObjHashCode?0:1}function hashCode(str){var hash=0;if(str.length==0)return hash;for(var i=0;i<str.length;i++){var char=str.charCodeAt(i);hash=(hash<<5)-hash+char,hash&=hash}return hash}function deletePropertyHashKey(arr){for(var i=0;i<arr.length;i++)delete arr[i].$$hashKey;return arr}$scope.from=$rootScope.TabsData.from,console.log($rootScope.TabsData);var sessionId=$rootScope.sessionId;$scope.status={score:!1,exchange:!1,recharge:!1,limit:!1,remind:!1},$scope.openPanel=function(type){type==="score"&&$scope.cardTypeUpdate.baseInfo.isScore===1&&($scope.status.score=!0),type==="exchange"&&$scope.cardTypeUpdate.baseInfo.isExchange===1&&($scope.status.exchange=!0),type==="recharge"&&$scope.cardTypeUpdate.baseInfo.isSaving===1&&($scope.status.recharge=!0),type==="limit"&&$scope.cardTypeUpdate.baseInfo.isUseLimit===1&&($scope.status.limit=!0),type==="remind"&&$scope.cardTypeUpdate.baseInfo.isRemind===1&&($scope.status.remind=!0);var event=window.event||event;document.all?event.cancelBubble=!0:event.stopPropagation()},$scope.scoreWay={0:"按金额",1:"按操作"},$scope.exchangeWay={0:"电子券",1:"实物"},$scope.savingWay={0:"线上储值",1:"线下储值"},$scope.cardTypeUpdate={baseInfo:{}};var data=angular.copy($rootScope.TabsData),cardTypeId=data.id,testParam={sessionId:sessionId,id:cardTypeId,isEdit:1},initItems=[];ajaxService.AjaxPost(testParam,"memberequity/cardtype/baseInfo.do").then(function(result){$scope.cardTypeUpdate.baseInfo=angular.copy(result.baseInfo),$scope.initBaseInfo=angular.copy(result.baseInfo),$scope.cardTypeUpdate.baseInfo.isRemind&&$scope.cardTypeUpdate.baseInfo.isRemind===1&&($scope.status.remind=!0),$scope.cardTypeUpdate.baseInfo.isScore&&$scope.cardTypeUpdate.baseInfo.isScore===1&&($scope.status.score=!0),$scope.cardTypeUpdate.baseInfo.isExchange&&$scope.cardTypeUpdate.baseInfo.isExchange===1&&($scope.status.exchange=!0),$scope.cardTypeUpdate.baseInfo.isSaving&&$scope.cardTypeUpdate.baseInfo.isSaving===1&&($scope.status.recharge=!0),$scope.cardTypeUpdate.baseInfo.isUseLimit&&$scope.cardTypeUpdate.baseInfo.isUseLimit===1&&($scope.status.limit=!0)}),ajaxService.AjaxPost(testParam,"memberequity/cardtype/limitSet.do").then(function(result){$scope.cardTypeUpdate.limitSet=angular.copy(result.limitSet),$scope.initLimitSet=angular.copy($scope.cardTypeUpdate.limitSet),initItems=angular.copy($scope.cardTypeUpdate.limitSet.relShops),$scope.changeItems=[]}),ajaxService.AjaxPost(testParam,"memberequity/cardtype/relSavingRules.do").then(function(result){$scope.cardTypeUpdate.relSavingRules=angular.copy(result.relSavingRules),$scope.initRelSavingRules=angular.copy($scope.cardTypeUpdate.relSavingRules)}),ajaxService.AjaxPost(testParam,"memberequity/cardtype/relExchangeRules.do").then(function(result){$scope.cardTypeUpdate.relExchangeRules=angular.copy(result.relExchangeRules),$scope.initRelExchangeRules=angular.copy($scope.cardTypeUpdate.relExchangeRules)}),ajaxService.AjaxPost(testParam,"memberequity/cardtype/scoreSet.do").then(function(result){$scope.cardTypeUpdate.scoreSet=angular.copy(result.scoreSet);if(result.scoreSet.clearDate&&result.scoreSet.clearDate.length>0){var month=getMonth(result.scoreSet.clearDate),day=getDay(result.scoreSet.clearDate);$scope.cardTypeUpdate.scoreSet.clearMonth=month,$scope.cardTypeUpdate.scoreSet.clearDay=day}else $scope.cardTypeUpdate.scoreSet.clearMonth="",$scope.cardTypeUpdate.scoreSet.clearDay="";$scope.initScoreSet=angular.copy($scope.cardTypeUpdate.scoreSet)}),$scope.months=["01","02","03","04","05","06","07","08","09","10","11","12"],$scope.days=getDays((new Date).getMonth()),$scope.changeMonth=function(month){$scope.days=getDays(month)};var currentTabId=getCurrentTabId(),newScoreTab={title:"新建积分规则",id:"newScoreRule",template:"memberequity/scorerule/newScoreRule.html",ctrlName:"newScoreRule",ctrl:"memberequity/scorerule/newScoreRule",from:currentTabId,type:"multiple",ng_show:!1},newExcahngeTab={title:"新建兑换规则",id:"newExchangeRule",ctrlName:"newExchangeRule",ctrl:"memberequity/exchangerule/newExchangeRule",template:"memberequity/exchangerule/newExchangeRule.html",from:currentTabId,type:"multiple",ng_show:!1},newRechargeTab={title:"新建储值规则",id:"newSavingRule",ctrl:"memberequity/savingrule/newSavingRule",ctrlName:"newSavingRule",template:"memberequity/savingrule/newSavingRule.html",from:currentTabId,type:"multiple",ng_show:!1};$scope.showModal=function(){var showFlg=1,currentItems=$scope.cardTypeUpdate.limitSet.relShops,paramSet={serviceType:"shop",shop:{brand:1,city:2,ajaxUrl:"baseData/shopManager/getShopTree.do"},initItems:initItems,currentItems:currentItems,showFlg:1,title:"选择门店"};shopSelectorService.openShopModal(paramSet).then(function(result){$scope.cardTypeUpdate.limitSet.relShops=convertModalShop(result.allSelectedItems),$scope.changeItems=result.changeItems})},$scope.createNew=function(type){type&&(type==="score"&&register.addToTabs(newScoreTab,{callback:function a(){}}),type==="exchange"&&register.addToTabs(newExcahngeTab,{callback:function a(){}}),type==="recharge"&&register.addToTabs(newRechargeTab,{callback:function a(){}}))},$scope.cancelIn=function(){register.switchTab({id:$scope.from})},$scope.confirmUpdate=function(){$scope.cardTypeUpdate.isBaseInfoChange=isChange($scope.initBaseInfo,$scope.cardTypeUpdate.baseInfo),$scope.cardTypeUpdate.scoreSet.clearMonth&&$scope.cardTypeUpdate.scoreSet.clearDay&&($scope.cardTypeUpdate.scoreSet.clearDate=$scope.cardTypeUpdate.scoreSet.clearMonth+"-"+$scope.cardTypeUpdate.scoreSet.clearDay),$scope.cardTypeUpdate.scoreSet.relScoreRules=deletePropertyHashKey($scope.cardTypeUpdate.scoreSet.relScoreRules),$scope.cardTypeUpdate.isScoreChange=isChange($scope.initScoreSet,$scope.cardTypeUpdate.scoreSet),$scope.cardTypeUpdate.relExchangeRules=deletePropertyHashKey($scope.cardTypeUpdate.relExchangeRules),$scope.cardTypeUpdate.isRelExchangeChange=isChange($scope.initRelExchangeRules,$scope.cardTypeUpdate.relExchangeRules),$scope.cardTypeUpdate.relSavingRules=deletePropertyHashKey($scope.cardTypeUpdate.relSavingRules),$scope.cardTypeUpdate.isRelSavingChange=isChange($scope.initRelSavingRules,$scope.cardTypeUpdate.relSavingRules),$scope.cardTypeUpdate.limitSet.relShops=deletePropertyHashKey($scope.cardTypeUpdate.limitSet.relShops),$scope.cardTypeUpdate.islimitSetChange=isChange($scope.initLimitSet,$scope.cardTypeUpdate.limitSet);if($scope.cardTypeUpdate.baseInfo.isUseLimit===1){var checkOneItem=!1;for(var p in $scope.cardTypeUpdate.limitSet)p==="isFirstConsume"&&$scope.cardTypeUpdate.limitSet[p]===1&&(checkOneItem=!0),p==="isMinRecharge"&&$scope.cardTypeUpdate.limitSet[p]===1&&(checkOneItem=!0),p==="isShopLimit"&&$scope.cardTypeUpdate.limitSet[p]===1&&(checkOneItem=!0);if(checkOneItem===!1){modalService.info({title:"提示",content:"您已开启使用限制，请至少选择一条使用限制!",size:"sm",type:"confirm"});return}}$scope.ruleData=angular.copy($scope.cardTypeUpdate),$scope.cardTypeUpdate.islimitSetChange===1&&$scope.changeItems&&$scope.changeItems.length>0?$scope.ruleData.limitSet.relShops=$scope.changeItems:$scope.ruleData.limitSet.relShops=[],$scope.ruleData.sessionId=sessionId,$scope.ruleData.id=cardTypeId,ajaxService.AjaxPost($scope.ruleData,"memberequity/cardtype/update.do").then(function(result){result&&result.status===1&&(selectExchanges=[],modalService.info({content:"修改成功",type:"ok"}).then(function(obj){obj.status=="ok"&&($rootScope.TabsData.callback(),register.switchTab({id:$scope.from}))},function(){$rootScope.TabsData.callback(),register.switchTab({id:$scope.from})}))})},$scope.minus=function(rules,$index){rules.splice($index,1)},$scope.up=function(rules,$index){var tempRule=rules[$index];rules[$index]=rules[$index-1],rules[$index-1]=tempRule},$scope.down=function(rules,$index){var tempRule=rules[$index];rules[$index]=rules[$index+1],rules[$index+1]=tempRule},$scope.showSavingModal=function(){var modalInstance=$uibModal.open({animation:!0,template:savingSelectorTemp,size:"lg",controller:"savingSelectorCtrl",resolve:{ruleIds:function(){var ruleIds=[];return $scope.cardTypeUpdate.relSavingRules.forEach(function(v){ruleIds.push(v.id)}),ruleIds}}});modalInstance.result.then(function(selectedItem){selectedItem.forEach(function(v){$scope.cardTypeUpdate.relSavingRules.push(v)})})},$scope.showScoreModal=function(){var modalInstance=$uibModal.open({animation:!0,template:scoreSelectorTemp,size:"lg",controller:"scoreSelectorCtrl",resolve:{ruleIds:function(){var ruleIds=[];return $scope.cardTypeUpdate.scoreSet.relScoreRules.forEach(function(v){ruleIds.push(v.id)}),ruleIds}}});modalInstance.result.then(function(selectedItem){selectedItem.forEach(function(v){$scope.cardTypeUpdate.scoreSet.relScoreRules.push(v)})})},$scope.stopPropagation=function($event){$event.stopPropagation()},$scope.showExchangeModal=function(){var modalInstance=$uibModal.open({animation:!0,template:exchangeSelectorTemp,size:"lg",controller:"exchangeSelectorCtrl",resolve:{ruleIds:function(){var ruleIds=[];return $scope.cardTypeUpdate.relExchangeRules.forEach(function(v){ruleIds.push(v.id)}),ruleIds}}});modalInstance.result.then(function(selectedItem){selectedItem.forEach(function(v){$scope.cardTypeUpdate.relExchangeRules.push(v)})})}}])});