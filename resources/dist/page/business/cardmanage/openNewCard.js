define(["require","ngAMD","angular"],function(require){var ngAMD=require("ngAMD"),angular=require("angular");ngAMD.controller("openNewCardCtrl",["$scope","appConstant","ajaxService","register","modalService","$rootScope",function($scope,appConstant,ajaxService,register,modalService,$rootScope){function isChangeGenerateCondition(){var isChange=!1;if($scope.hadGenerateCondtion.prefixNum!=$scope.newCard.prefixNum||$scope.hadGenerateCondtion.initNum!=$scope.newCard.initNum||$scope.hadGenerateCondtion.endNum!=$scope.newCard.endNum||$scope.hadGenerateCondtion.openCount!=$scope.newCard.openCount||$scope.hadGenerateCondtion.isShield!=$scope.newCard.isShield||$scope.hadGenerateCondtion.shieldTailCount!=$scope.newCard.shieldTailCount||$scope.hadGenerateCondtion.shieldTailNums!=$scope.newCard.shieldTailNums)isChange=!0;return isChange}var tabData=$rootScope.TabsData,data=angular.copy(tabData);$scope.from=data.from,$scope.changPage=data,$scope.forbideSave=!1,$scope.preNumList=[1,2,3,4,5,6,7,8,9],$scope.newCard={prefixInitNum:"1",initNum:null,openCount:null,isShield:0,shieldTailCount:null,shieldTailNums:null,endNum:null,shopId:null,cardTypeId:null,validateType:"1",validateBeginTime:null,validateEndTime:null,relativeDays:null},ajaxService.AjaxPost({sessionId:$rootScope.sessionId},"baseData/shopManager/getAllShopsForCompany.do").then(function(result){$scope.allShopList=result.data}),ajaxService.AjaxPost({sessionId:$rootScope.sessionId},"memberequity/cardtype/getCardTypeCombo.do").then(function(result){$scope.allCardTypeList=result.data}),$scope.checkInitNum=function(newCard){/^\d{4,15}$/.test(newCard.initNum)||modalService.info({title:"提示",content:"请输入4到15位数字作为起始卡号！",size:"sm",type:"confirm"}),newCard.prefixInitNum=="1"&&/^\d{10}$/.test(newCard.initNum)&&modalService.info({title:"提示",content:"该卡号段可能与手机号冲突，请重新选择！",size:"sm",type:"confirm"})},$scope.generateEndNum=function(){$scope.newCard.endNum=null,$scope.suffixCardNoList=[];if(!$scope.newCard.prefixInitNum||$scope.newCard.prefixInitNum=="")return modalService.info({title:"提示",content:"起始卡号前缀不能为空！",size:"sm",type:"confirm"}),!1;if(!/^[0-9]{4,15}$/.test($scope.newCard.initNum))return modalService.info({title:"提示",content:"起始卡号不合法！",size:"sm",type:"confirm"}),!1;if($scope.newCard.openCount==null||$scope.newCard.openCount<1)return modalService.info({title:"提示",content:"张数必须大于零！",size:"sm",type:"confirm"}),!1;if($scope.newCard.shieldTailCount!=null&&$scope.newCard.shieldTailCount<0)return modalService.info({title:"提示",content:"屏蔽卡号末几位不能为负数！",size:"sm",type:"confirm"}),!1;ajaxService.AjaxPost({sessionId:$rootScope.sessionId,bmOpenCardBean:$scope.newCard},"opencardmanage/bmOpenCard/generateCardsNos.do").then(function(result){var status=result.status;if(status==0)return!1;var resbmOpenCardBean=result.bmOpenCardBean;$scope.newCard.initNum=resbmOpenCardBean.initNum,$scope.newCard.endNum=resbmOpenCardBean.endNum,$scope.suffixCardNoList=result.suffixCardNoList;var hadGenerateCondtion={};hadGenerateCondtion.prefixNum=resbmOpenCardBean.prefixNum,hadGenerateCondtion.initNum=resbmOpenCardBean.initNum,hadGenerateCondtion.endNum=resbmOpenCardBean.endNum,hadGenerateCondtion.openCount=resbmOpenCardBean.openCount,hadGenerateCondtion.isShield=resbmOpenCardBean.isShield,hadGenerateCondtion.shieldTailCount=resbmOpenCardBean.shieldTailCount,hadGenerateCondtion.shieldTailNums=resbmOpenCardBean.shieldTailNums,$scope.hadGenerateCondtion=hadGenerateCondtion})},$scope.saveNewCard=function(newCard){$scope.forbideSave=!0;if($scope.hadGenerateCondtion==null)return modalService.info({title:"提示",content:"未生成卡号！",size:"sm",type:"confirm"}),$scope.forbideSave=!1,!1;if(isChangeGenerateCondition())return modalService.info({title:"提示",content:"获取卡号条件发生变化，需要重新获取！",size:"sm",type:"confirm"}),$scope.forbideSave=!1,!1;if($scope.suffixCardNoList==null||$scope.suffixCardNoList.length<1)return modalService.info({title:"提示",content:"未能正确获取卡号！",size:"sm",type:"confirm"}),$scope.forbideSave=!1,!1;if(newCard.validateType=="2"){if(newCard.validateBeginTime==null&&newCard.validateEndTime==null)return modalService.info({title:"提示",content:"有效开始、结束时间不能为空！",size:"sm",type:"confirm"}),$scope.forbideSave=!1,!1;if(newCard.validateBeginTime>newCard.validateEndTime)return modalService.info({title:"提示",content:"开始时间不能大于结束时间！",size:"sm",type:"confirm"}),$scope.forbideSave=!1,!1}else if(newCard.validateType=="3")if(newCard.relativeDays==null||newCard.relativeDays<1)return modalService.info({title:"提示",content:"相对有效期必须大于0！",size:"sm",type:"confirm"}),$scope.forbideSave=!1,!1;newCard.validateBeginTime&&(newCard.validateBeginTime=(new Date(newCard.validateBeginTime)).getTime()),newCard.validateEndTime&&(newCard.validateEndTime=(new Date(newCard.validateEndTime)).getTime());var params={};params.bmOpenCardBean=newCard,params.suffixCardNoList=$scope.suffixCardNoList,params.sessionId=$rootScope.sessionId,ajaxService.AjaxPost(params,"opencardmanage/bmOpenCard/saveOpenCards.do").then(function(result){$scope.forbideSave=!1;var status=result.status;status&&(modalService.info({title:"提示",content:"开卡成功！",size:"sm",type:"ok"}),$scope.changPage.callback(),register.switchTab({id:$scope.from}))},function(data){$scope.forbideSave=!1})},$scope.doCreateCardType=function(){register.addToTabs({title:"新建卡型规则",id:"cardTypeCreate",ctrlName:"cardTypeCreate",ctrl:"memberequity/cardtype/cardTypeCreate",template:"memberequity/cardtype/cardTypeCreate.html",from:10023,type:"multiple",ng_show:!1},{})},$scope.cancel=function(){register.switchTab({id:$scope.from})},$scope.hideBetweenTime=!0,$scope.hideRelatvieDays=!0,$scope.changeValidateType=function(validateType){validateType=="1"?($scope.hideBetweenTime=!0,$scope.hideRelatvieDays=!0,$scope.newCard.validateBeginTime=null,$scope.newCard.validateEndTime=null,$scope.newCard.relativeDays=null):validateType=="2"?($scope.hideBetweenTime=!1,$scope.hideRelatvieDays=!0,$scope.newCard.relativeDays=null):validateType=="3"&&($scope.hideBetweenTime=!0,$scope.hideRelatvieDays=!1,$scope.newCard.validateBeginTime=null,$scope.newCard.validateEndTime=null)}}])});